% load('EXP_Struct.mat')
% 
% for i=1:size(EXP_Struct,2)
%     Uptakes.rxns{i}=EXP_Struct(i).Name;
%     Uptakes.values{i}=EXP_Struct(i).EXP1;                                     %If you want another experiment, add that to EXP_Struct, and change EXP1 accordingly in this line
%     Uptakes.type{i}='b';
% end
% 
% load('Metaclau.mat')
% 
% [optForceSets, posOptForceSets, typeRegOptForceSets, flux_optForceSets,Eff_out] ...
%     =Opt_find(metaclau,Uptakes)
% 
% load('Mapping vect.mat')

%% Generation of perturbation vectors for the Core/Kinetic model
Temp=optForceSets{1,1};
j=0
for i=1:size(optForceSets{1,1},1)
    [a,b]=ismember(Temp{i},Mapping_Vect(:,1))
    if a
        j=j+1
        First_Order_Core(j,1)=find(ismember(model.rxns,(Mapping_Vect(find(ismember(Mapping_Vect(:,1),Temp{i})),2))))
        Temp2=typeRegOptForceSets{1,1}
        if strcmp(Temp2{i},'knockout')
            First_Order_Core(j,2)=0;
        elseif strcmp(Temp2{i},'downregulation')
            First_Order_Core(j,2)=1;
        else
            First_Order_Core(j,2)=2                                         %I made a convention here: Knockout:0 Downreg:1 Upreg=1 for convenience 
        end
    end
end

Temp=optForceSets{1,2};
j=0
for i=1:size(optForceSets{1,2},1)
    [a,b]=ismember(Temp{i,1},Mapping_Vect(:,1))
    [c,d]=ismember(Temp{i,2},Mapping_Vect(:,1))
    if a && c
        j=j+1
        Second_Order_Core(j,1)=find(ismember(model.rxns,(Mapping_Vect(find(ismember(Mapping_Vect(:,1),Temp{i,1})),2))))
        Second_Order_Core(j,3)=find(ismember(model.rxns,(Mapping_Vect(find(ismember(Mapping_Vect(:,1),Temp{i,2})),2))))
        Temp2=typeRegOptForceSets{1,2}
        if strcmp(Temp2{i,1},'knockout')
            Second_Order_Core(j,2)=0;
        elseif strcmp(Temp2{i,1},'downregulation')
            Second_Order_Core(j,2)=1;
        else
            Second_Order_Core(j,2)=2                                         %I made a convention here: Knockout:0 Downreg:1 Upreg=1 for convenience 
        end
        
        if strcmp(Temp2{i,2},'knockout')
            Second_Order_Core(j,4)=0;
        elseif strcmp(Temp2{i,2},'downregulation')
            Second_Order_Core(j,4)=1;
        else
            Second_Order_Core(j,4)=2                                         
        end
    end
end

Temp=optForceSets{1,3};
j=0
for i=1:size(optForceSets{1,3},1)
    [a,b]=ismember(Temp{i,1},Mapping_Vect(:,1))
    [c,d]=ismember(Temp{i,2},Mapping_Vect(:,1))
    [e,f]=ismember(Temp{i,3},Mapping_Vect(:,1))
    if a && c && e
        j=j+1
        Third_Order_Core(j,1)=find(ismember(model.rxns,(Mapping_Vect(find(ismember(Mapping_Vect(:,1),Temp{i,1})),2))))
        Third_Order_Core(j,3)=find(ismember(model.rxns,(Mapping_Vect(find(ismember(Mapping_Vect(:,1),Temp{i,2})),2))))
        Third_Order_Core(j,5)=find(ismember(model.rxns,(Mapping_Vect(find(ismember(Mapping_Vect(:,1),Temp{i,3})),2))))
      
        Temp2=typeRegOptForceSets{1,3}
        if strcmp(Temp2{i,1},'knockout')
            Third_Order_Core(j,2)=0;
        elseif strcmp(Temp2{i,1},'downregulation')
            Third_Order_Core(j,2)=1;
        else
            Third_Order_Core(j,2)=2                                         %I made a convention here: Knockout:0 Downreg:1 Upreg=1 for convenience 
        end
        
        if strcmp(Temp2{i,2},'knockout')
            Third_Order_Core(j,4)=0;
        elseif strcmp(Temp2{i,2},'downregulation')
            Third_Order_Core(j,4)=1;
        else
            Third_Order_Core(j,4)=2                                         
        end
        
         if strcmp(Temp2{i,3},'knockout')
            Third_Order_Core(j,6)=0;
        elseif strcmp(Temp2{i,2},'downregulation')
            Third_Order_Core(j,6)=1;
        else
            Third_Order_Core(j,6)=2                                         
         end
        
         
    end
end
            
        
        

% Temp=optForceSets{1,1};
% Temp=Mapping_Vect(ismember(Mapping_Vect(:,1),Temp(find(ismember(optForceSets{1,1},Mapping_Vect(:,1))))),2)
% First_Order_Core(:,1)=find(ismember(model.rxns,Temp))
% Temp2=typeRegOptForceSets{1,1};
% First_Order_Core(:,2)=Temp2(find(ismember(optForceSets{1,1},Mapping_Vect(:,1))),1)
% 



%% First Order Interventions
Upregulation_Vect=[1.1 1.3 1.5];
Downregulation_Vect=[0.9 0.7 0.5];
Knockout_Vect=[0];
uptake_rxns = [2;3]; %[1 - CO Uptake; 2 - H2 Uptake]                        % INPUT elementary rxn index for uptake rxns constrained for DAE 
uptake_values = [Uptakes.values{1};Uptakes.values{2}];

Base_BDOH=

for i=1:size(First_Order_Core,1)
    if First_Order_Core(i,2)==0
        perturbed_rxn=First_Order_Core(i,1);
        expression_level = [0];
        t_interval = 0:5e4;                                                         % INPUT - time interval for DAE integration
         save_results = 1;                                                           % 1-save results as matlab file; 0-do not save results
         if save_results
            file_save_name = 'TEST_results_First_Order_'+num2str(i);                                        % INPUT desired name of results file
         end
        [solutions, complete_times, ode_warn_flags, slope_norms] = ... 
        perturb_Ksets(model, All_K_final, All_fractions_final, ...
        t_interval, uptake_rxns, uptake_values, perturbed_rxn, ...
        expression_level);
end
