function [optForceSets, posOptForceSets, typeRegOptForceSets, flux_optForceSets]=Opt_find(Model)
if nargin==0
    Model=readCbModel('Metaclau.mat');
end
%% Setting up the Wild_Type and Mutant Solns
Model=readCbModel('Metaclau.mat');
Model=changeRxnBounds(Model,'EX_CARBON-MONOXIDE' ,-31.6); %From Clustridium Kinetic Model paper
Model=changeRxnBounds(Model,'EX_HYDROGEN-MOLECULE' ,-12.9);
Model=changeObjective(Model,'EX_BIOMASS');
%   This can be changed to a conditional form: If solver is not already
%   gurobi, change it to gurobi
changeCobraSolver('gurobi','all');
Wild_Type=optimizeCbModel(Model,'max');
Model_MT=changeObjective(Model,'EX_BUTANEDIOL');
Mutant=optimizeCbModel(Model_MT);
exchanges=cellfun(@isempty, strfind(Model.rxns, 'EX_'))==0;
Ex_Rxns=Model.rxns(exchanges);Ex_MT=Mutant.x(exchanges);Ex_WT=Wild_Type.x(exchanges);
Diff_Ind=Ex_MT~=Ex_WT;
Exchange_Comp=table(Ex_Rxns(Diff_Ind),Ex_WT(Diff_Ind),Ex_MT(Diff_Ind),'VariableNames',{'Ex_Rxns','WT','MT'})
clear Ex_MT Ex_WT Diff_Ind

%% Building The Constraints
constrWT = struct('rxnList', {{'EX_BIOMASS'}}, 'rxnValues', Wild_Type.f, 'rxnBoundType', 'b');
constrMT = struct('rxnList', {{'EX_BIOMASS', 'EX_BUTANEDIOL'}}, 'rxnValues', [0, Mutant.f],'rxnBoundType', 'bb');
[minFluxesW, maxFluxesW, minFluxesM, maxFluxesM, ~, ~] = FVAOptForce(Model,constrWT, constrMT);
FVA_Results=table(Model.rxns,minFluxesW, maxFluxesW, minFluxesM, maxFluxesM)
%% Finding Musts
runID = 'OptForce_bdoh';
constrOpt = struct('rxnList', {{'EX_BIOMASS','EX_BUTANEDIOL'}}, 'values', [0,Mutant.f]');
[mustLSet, pos_mustL] = findMustL(Model, minFluxesW, maxFluxesW, 'constrOpt', constrOpt, ...
                                  'runID', runID, 'outputFolder', 'OutputsFindMustL', ...
                                  'outputFileName', 'MustL' , 'printExcel', 1, 'printText', 0, ...
                                  'printReport', 0, 'keepInputs', 1, 'verbose', 0);
[mustUSet, pos_mustU] = findMustU(Model, minFluxesW, maxFluxesW, 'constrOpt', constrOpt, ...
                                  'runID', runID, 'outputFolder', 'OutputsFindMustU', ...
                                  'outputFileName', 'MustU' , 'printExcel', 0, 'printText', 0, ...
                                  'printReport', 1, 'keepInputs', 1, 'verbose', 0);
                              
exchangeRxns = Model.rxns(cellfun(@isempty, strfind(Model.rxns, 'EX_')) == 0);
excludedRxns = unique([mustUSet; mustLSet; exchangeRxns])

[mustUU, pos_mustUU, mustUU_linear, pos_mustUU_linear] = ...
    findMustUU(Model, minFluxesW, maxFluxesW, 'constrOpt', constrOpt, ...
               'excludedRxns', excludedRxns,'runID', runID, ...
               'outputFolder', 'OutputsFindMustUU', 'outputFileName', 'MustUU', ...
               'printExcel', 1, 'printText', 0, 'printReport', 0, 'keepInputs', 1, ...
               'verbose', 1);
[mustLL, pos_mustLL, mustLL_linear, pos_mustLL_linear] = ...
    findMustLL(Model, minFluxesW, maxFluxesW, 'constrOpt', constrOpt, ...
               'excludedRxns', excludedRxns,'runID', runID, ...
               'outputFolder', 'OutputsFindMustLL', 'outputFileName', 'MustLL', ...
               'printExcel', 1, 'printText', 0, 'printReport', 0, 'keepInputs', 1, ...
               'verbose', 1);
[mustUL, pos_mustUL, mustUL_linear, pos_mustUL_linear] = ...
    findMustUL(Model, minFluxesW, maxFluxesW, 'constrOpt', constrOpt, ...
               'excludedRxns', excludedRxns,'runID', runID, ...
               'outputFolder', 'OutputsFindMustUL', 'outputFileName', 'MustUL', ...
               'printExcel', 1, 'printText', 0, 'printReport', 0, 'keepInputs', 1, ...
               'verbose', 1);

mustU
mustL
mustUU
mustUL
mustLL
mustU = unique(union(mustUSet, mustUU));
mustL = unique(union(mustLSet, mustLL));
targetRxn = 'EX_BUTANEDIOL';
biomassRxn = 'EX_BIOMASS';
k = 2;
nSets = 1;
constrOpt = struct('rxnList', {{'EX_BUTANEDIOL','EX_CARBON-MONOXIDE','EX_HYDROGEN-MOLECULE'}}, 'values', [Mutant.f,-31.6 ,-12.9]);
[optForceSets, posOptForceSets, typeRegOptForceSets, flux_optForceSets] = ...
    optForce(Model, targetRxn, biomassRxn, mustU, mustL, ...
             minFluxesW, maxFluxesW, minFluxesM, maxFluxesM, ...
             'k', k, 'nSets', nSets, 'constrOpt', constrOpt, ...
             'runID', runID, 'outputFolder', 'OutputsOptForce', ...
             'outputFileName', 'OptForce', 'printExcel', 1, 'printText', 1, ...
             'printReport', 1, 'keepInputs', 1, 'verbose', 1);
